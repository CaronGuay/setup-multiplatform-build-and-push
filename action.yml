name: 'RSpec'
description: 'Run RSpecs'

inputs:
  registry:
    description: 'Registry to get image'
    required: false
    default: ghcr.io
  username:
    description: 'Registry login username'
    required: true
  password:
    description: 'Registry login password'
    required: true
  dockerfile_name:
    description: 'Dockerfile name, used in build'
    required: false
    default: Dockerfile
  pushtag:
    description: 'Push tag'
    required: true
  git_patoken:
    description: 'git personal access token'
    required: false
  platforms:
    description: 'platforms to build'
    required: false
    default: linux/amd64,linux/arm64
  repo_owner:
    description: 'Repo owner to push to'
    required: false
    default: codeboxxtechschool
  bundle_required_files:
    description: 'files that require bundle'
    required: false
  image_base:
    description: 'Image from which to bundle on'
    required: false
    default: cg/java-dev-capy-webkit

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # OR "2"
    - name: Get changed files
      id: changed_files
      uses: tj-actions/changed-files@v2.0.0
      with:
        files: |
          Gemfile.lock
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: "setup image ref"
      shell: bash
      run: |
        if [ "${{ steps.changed_files.outputs.any_changed }}" -ne "true" ]
        then
           echo "IMAGE_REF=${{ inputs.pushtag }}" >> $GITHUB_ENV
        else
           echo "IMAGE_REF=${{ inputs.image_base }}" >> $GITHUB_ENV
        fi
    - name: Build and push (bundle not required)
      uses: docker/build-push-action@v2
      with:
        secrets: |
          GIT_PAT=${{ inputs.git_patoken }}
        file: ${{ inputs.dockerfile_name }}
        platforms: ${{ inputs.platforms }}
        build-args: |
          IMAGE_REF=${{ inputs.registry }}/${{ inputs.repo_owner }}/${{ env.IMAGE_REF }}
        push: true
        tags: |
          ${{ inputs.registry }}/${{ inputs.repo_owner }}/${{ inputs.pushtag }}
